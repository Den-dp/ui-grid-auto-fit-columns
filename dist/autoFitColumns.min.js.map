{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///autoFitColumns.min.js","webpack:///webpack/bootstrap 2a30a220c7a745a6233b","webpack:///./src/index.ts","webpack:///external \"angular\"","webpack:///./src/UiGridAutoFitColumnsService.ts","webpack:///./~/lodash/object/get.js","webpack:///./~/lodash/internal/baseGet.js","webpack:///./~/lodash/internal/toObject.js","webpack:///./~/lodash/lang/isObject.js","webpack:///./~/lodash/internal/toPath.js","webpack:///./~/lodash/internal/baseToString.js","webpack:///./~/lodash/lang/isArray.js","webpack:///./~/lodash/internal/getNative.js","webpack:///./~/lodash/lang/isNative.js","webpack:///./~/lodash/lang/isFunction.js","webpack:///./~/lodash/internal/isObjectLike.js","webpack:///./~/lodash/internal/isLength.js","webpack:///./src/Measurer.ts","webpack:///./src/UiGridMetrics.ts","webpack:///./src/UiGridAutoFitColumnsDirective.ts"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","angular","UiGridAutoFitColumnsService_1","UiGridAutoFitColumnsDirective_1","Object","defineProperty","value","default","service","UiGridAutoFitColumnsService","directive","UiGridAutoFitColumnsDirective","name","get","Measurer_1","UiGridMetrics_1","$q","$filter","gridMetrics","$inject","prototype","initializeGrid","grid","registerColumnBuilder","colAutoFitColumnBuilder","bind","registerColumnsProcessor","columnsProcessor","defaultGridOptions","options","gridOptions","enableColumnAutoFit","getFilterIfExists","filterName","e","getFilteredValue","cellFilter","filter","re","matches","exec","colDef","col","promises","undefined","isResizable","all","hasOwnProperty","renderedColumnsToProcess","rows","_this","length","optimalWidths","forEach","column","columnKey_1","field","measureRoundedTextWidth","displayName","getHeaderFont","getHeaderButtonsWidth","row","cellText","entity","currentCellWidth","getCellFont","optimalCellWidth","width","getPadding","getBorder","updateColumnDef","object","path","defaultValue","result","baseGet","toPath","pathKey","toObject","index","isObject","type","isArray","baseToString","replace","rePropName","match","number","quote","string","push","reEscapeChar","getNative","isLength","isObjectLike","arrayTag","objectProto","objToString","toString","nativeIsArray","Array","key","isNative","isFunction","reIsNative","test","fnToString","reIsHostCtor","Function","RegExp","funcTag","MAX_SAFE_INTEGER","Measurer","measureTextWidth","text","font","canvas","document","createElement","context","getContext","metrics","measureText","Math","floor","UiGridMetrics","headerFont","header","querySelector","Error","headerStyle","getComputedStyle","getFontStringFrom","cellFont","cell","element","className","style","cssFloat","body","append","cellStyle_1","remove","cellStyle","padding","_a","paddingLeft","paddingRight","parseInt","border","borderRightWidth","HEADER_BUTTONS_WIDTH","fontStyle","fontVariant","fontWeight","fontSize","fontFamily","uiGridAutoFitColumnsService","priority","scope","compile","pre","$scope","$elm","$attrs","uiGridCtrl"],"mappings":"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","file":"autoFitColumns.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"angular\")) : factory(root[\"angular\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"angular\")) : factory(root[\"angular\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar angular = __webpack_require__(1);\r\n\tvar UiGridAutoFitColumnsService_1 = __webpack_require__(2);\r\n\tvar UiGridAutoFitColumnsDirective_1 = __webpack_require__(17);\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = angular.module('ui.grid.autoFitColumns', ['ui.grid'])\r\n\t    .service('uiGridAutoFitColumnsService', UiGridAutoFitColumnsService_1.UiGridAutoFitColumnsService)\r\n\t    .directive('uiGridAutoFitColumns', UiGridAutoFitColumnsDirective_1.UiGridAutoFitColumnsDirective)\r\n\t    .name;\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar get = __webpack_require__(3);\r\n\tvar Measurer_1 = __webpack_require__(15);\r\n\tvar UiGridMetrics_1 = __webpack_require__(16);\r\n\tvar UiGridAutoFitColumnsService = (function () {\r\n\t    /*@ngInject*/\n\t    UiGridAutoFitColumnsService.$inject = [\"$q\", \"$filter\"];\r\n\t    function UiGridAutoFitColumnsService($q, $filter) {\r\n\t        this.$q = $q;\r\n\t        this.$filter = $filter;\r\n\t        this.gridMetrics = new UiGridMetrics_1.default();\r\n\t    }\r\n\t    UiGridAutoFitColumnsService.prototype.initializeGrid = function (grid) {\r\n\t        grid.registerColumnBuilder(this.colAutoFitColumnBuilder.bind(this));\r\n\t        grid.registerColumnsProcessor(this.columnsProcessor.bind(this), 60);\r\n\t        UiGridAutoFitColumnsService.defaultGridOptions(grid.options);\r\n\t    };\r\n\t    UiGridAutoFitColumnsService.defaultGridOptions = function (gridOptions) {\r\n\t        // true by default\r\n\t        gridOptions.enableColumnAutoFit = gridOptions.enableColumnAutoFit !== false;\r\n\t    };\r\n\t    UiGridAutoFitColumnsService.prototype.getFilterIfExists = function (filterName) {\r\n\t        try {\r\n\t            return this.$filter(filterName);\r\n\t        }\r\n\t        catch (e) {\r\n\t            return null;\r\n\t        }\r\n\t    };\r\n\t    UiGridAutoFitColumnsService.prototype.getFilteredValue = function (value, cellFilter) {\r\n\t        if (cellFilter && cellFilter !== '') {\r\n\t            var filter = this.getFilterIfExists(cellFilter);\r\n\t            if (filter) {\r\n\t                value = filter(value);\r\n\t            }\r\n\t            else {\r\n\t                // https://regex101.com/r/rC5eR5/2\r\n\t                var re = /([^:]*):([^:]*):?([\\s\\S]+)?/;\r\n\t                var matches = void 0;\r\n\t                if ((matches = re.exec(cellFilter)) !== null) {\r\n\t                    value = this.$filter(matches[1])(value, matches[2], matches[3]);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return value;\r\n\t    };\r\n\t    UiGridAutoFitColumnsService.prototype.colAutoFitColumnBuilder = function (colDef, col, gridOptions) {\r\n\t        var promises = [];\r\n\t        if (colDef.enableColumnAutoFit === undefined) {\r\n\t            //TODO: make it as col.isResizable()\r\n\t            if (UiGridAutoFitColumnsService.isResizable(colDef)) {\r\n\t                colDef.enableColumnAutoFit = gridOptions.enableColumnAutoFit;\r\n\t            }\r\n\t            else {\r\n\t                colDef.enableColumnAutoFit = false;\r\n\t            }\r\n\t        }\r\n\t        return this.$q.all(promises);\r\n\t    };\r\n\t    UiGridAutoFitColumnsService.isResizable = function (colDef) {\r\n\t        return !colDef.hasOwnProperty('width');\r\n\t    };\r\n\t    UiGridAutoFitColumnsService.prototype.columnsProcessor = function (renderedColumnsToProcess, rows) {\r\n\t        var _this = this;\r\n\t        if (!rows.length) {\r\n\t            return renderedColumnsToProcess;\r\n\t        }\r\n\t        // TODO: respect existing colDef options\r\n\t        // if (col.colDef.enableColumnAutoFitting === false) return;\r\n\t        var optimalWidths = {};\r\n\t        renderedColumnsToProcess.forEach(function (column) {\r\n\t            if (column.colDef.enableColumnAutoFit) {\r\n\t                var columnKey_1 = column.field || column.name;\r\n\t                optimalWidths[columnKey_1] = Measurer_1.default.measureRoundedTextWidth(column.displayName, _this.gridMetrics.getHeaderFont()) + _this.gridMetrics.getHeaderButtonsWidth();\r\n\t                rows.forEach(function (row) {\r\n\t                    var cellText = get(row.entity, columnKey_1);\r\n\t                    if (!!column.colDef.cellFilter) {\r\n\t                        cellText = _this.getFilteredValue(cellText, column.colDef.cellFilter);\r\n\t                    }\r\n\t                    var currentCellWidth = Measurer_1.default.measureRoundedTextWidth(cellText, _this.gridMetrics.getCellFont());\r\n\t                    var optimalCellWidth = currentCellWidth > 300 ? 300 : currentCellWidth;\r\n\t                    if (optimalCellWidth > optimalWidths[columnKey_1]) {\r\n\t                        optimalWidths[columnKey_1] = optimalCellWidth;\r\n\t                    }\r\n\t                });\r\n\t                column.colDef.width = optimalWidths[columnKey_1] + _this.gridMetrics.getPadding() + _this.gridMetrics.getBorder();\r\n\t                column.updateColumnDef(column.colDef, false);\r\n\t            }\r\n\t        });\r\n\t        return renderedColumnsToProcess;\r\n\t    };\r\n\t    return UiGridAutoFitColumnsService;\r\n\t}());\r\n\texports.UiGridAutoFitColumnsService = UiGridAutoFitColumnsService;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseGet = __webpack_require__(4),\n\t    toPath = __webpack_require__(7);\n\n\t/**\n\t * Gets the property value at `path` of `object`. If the resolved value is\n\t * `undefined` the `defaultValue` is used in its place.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @param {Array|string} path The path of the property to get.\n\t * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t * @returns {*} Returns the resolved value.\n\t * @example\n\t *\n\t * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t *\n\t * _.get(object, 'a[0].b.c');\n\t * // => 3\n\t *\n\t * _.get(object, ['a', '0', 'b', 'c']);\n\t * // => 3\n\t *\n\t * _.get(object, 'a.b.c', 'default');\n\t * // => 'default'\n\t */\n\tfunction get(object, path, defaultValue) {\n\t  var result = object == null ? undefined : baseGet(object, toPath(path), (path + ''));\n\t  return result === undefined ? defaultValue : result;\n\t}\n\n\tmodule.exports = get;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toObject = __webpack_require__(5);\n\n\t/**\n\t * The base implementation of `get` without support for string paths\n\t * and default values.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {Array} path The path of the property to get.\n\t * @param {string} [pathKey] The key representation of path.\n\t * @returns {*} Returns the resolved value.\n\t */\n\tfunction baseGet(object, path, pathKey) {\n\t  if (object == null) {\n\t    return;\n\t  }\n\t  if (pathKey !== undefined && pathKey in toObject(object)) {\n\t    path = [pathKey];\n\t  }\n\t  var index = 0,\n\t      length = path.length;\n\n\t  while (object != null && index < length) {\n\t    object = object[path[index++]];\n\t  }\n\t  return (index && index == length) ? object : undefined;\n\t}\n\n\tmodule.exports = baseGet;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(6);\n\n\t/**\n\t * Converts `value` to an object if it's not one.\n\t *\n\t * @private\n\t * @param {*} value The value to process.\n\t * @returns {Object} Returns the object.\n\t */\n\tfunction toObject(value) {\n\t  return isObject(value) ? value : Object(value);\n\t}\n\n\tmodule.exports = toObject;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(1);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  // Avoid a V8 JIT bug in Chrome 19-20.\n\t  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\n\tmodule.exports = isObject;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseToString = __webpack_require__(8),\n\t    isArray = __webpack_require__(9);\n\n\t/** Used to match property names within property paths. */\n\tvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n\t/** Used to match backslashes in property paths. */\n\tvar reEscapeChar = /\\\\(\\\\)?/g;\n\n\t/**\n\t * Converts `value` to property path array if it's not one.\n\t *\n\t * @private\n\t * @param {*} value The value to process.\n\t * @returns {Array} Returns the property path array.\n\t */\n\tfunction toPath(value) {\n\t  if (isArray(value)) {\n\t    return value;\n\t  }\n\t  var result = [];\n\t  baseToString(value).replace(rePropName, function(match, number, quote, string) {\n\t    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t  });\n\t  return result;\n\t}\n\n\tmodule.exports = toPath;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Converts `value` to a string if it's not one. An empty string is returned\n\t * for `null` or `undefined` values.\n\t *\n\t * @private\n\t * @param {*} value The value to process.\n\t * @returns {string} Returns the string.\n\t */\n\tfunction baseToString(value) {\n\t  return value == null ? '' : (value + '');\n\t}\n\n\tmodule.exports = baseToString;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(10),\n\t    isLength = __webpack_require__(14),\n\t    isObjectLike = __webpack_require__(13);\n\n\t/** `Object#toString` result references. */\n\tvar arrayTag = '[object Array]';\n\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\n\t/* Native method references for those with the same name as other `lodash` methods. */\n\tvar nativeIsArray = getNative(Array, 'isArray');\n\n\t/**\n\t * Checks if `value` is classified as an `Array` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isArray([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArray(function() { return arguments; }());\n\t * // => false\n\t */\n\tvar isArray = nativeIsArray || function(value) {\n\t  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t};\n\n\tmodule.exports = isArray;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isNative = __webpack_require__(11);\n\n\t/**\n\t * Gets the native function at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {string} key The key of the method to get.\n\t * @returns {*} Returns the function if it's native, else `undefined`.\n\t */\n\tfunction getNative(object, key) {\n\t  var value = object == null ? undefined : object[key];\n\t  return isNative(value) ? value : undefined;\n\t}\n\n\tmodule.exports = getNative;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isFunction = __webpack_require__(12),\n\t    isObjectLike = __webpack_require__(13);\n\n\t/** Used to detect host constructors (Safari > 5). */\n\tvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\n\t/** Used to resolve the decompiled source of functions. */\n\tvar fnToString = Function.prototype.toString;\n\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\n\t/** Used to detect if a method is native. */\n\tvar reIsNative = RegExp('^' +\n\t  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t);\n\n\t/**\n\t * Checks if `value` is a native function.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t * @example\n\t *\n\t * _.isNative(Array.prototype.push);\n\t * // => true\n\t *\n\t * _.isNative(_);\n\t * // => false\n\t */\n\tfunction isNative(value) {\n\t  if (value == null) {\n\t    return false;\n\t  }\n\t  if (isFunction(value)) {\n\t    return reIsNative.test(fnToString.call(value));\n\t  }\n\t  return isObjectLike(value) && reIsHostCtor.test(value);\n\t}\n\n\tmodule.exports = isNative;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(6);\n\n\t/** `Object#toString` result references. */\n\tvar funcTag = '[object Function]';\n\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in older versions of Chrome and Safari which return 'function' for regexes\n\t  // and Safari 8 which returns 'object' for typed array constructors.\n\t  return isObject(value) && objToString.call(value) == funcTag;\n\t}\n\n\tmodule.exports = isFunction;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Checks if `value` is object-like.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\n\tmodule.exports = isObjectLike;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t * of an array-like value.\n\t */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\n\t/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t */\n\tfunction isLength(value) {\n\t  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t}\n\n\tmodule.exports = isLength;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Measurer = (function () {\r\n\t    function Measurer() {\r\n\t    }\r\n\t    Measurer.measureTextWidth = function (text, font) {\r\n\t        var canvas = Measurer.canvas || (Measurer.canvas = document.createElement('canvas'));\r\n\t        var context = canvas.getContext('2d');\r\n\t        context.font = font;\r\n\t        var metrics = context.measureText(text);\r\n\t        return metrics.width;\r\n\t    };\r\n\t    Measurer.measureRoundedTextWidth = function (text, font) {\r\n\t        var width = Measurer.measureTextWidth(text, font);\r\n\t        return Math.floor(width) + 1;\r\n\t    };\r\n\t    return Measurer;\r\n\t}());\r\n\texports.Measurer = Measurer;\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = Measurer;\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar UiGridMetrics = (function () {\r\n\t    function UiGridMetrics() {\r\n\t    }\r\n\t    UiGridMetrics.prototype.getHeaderFont = function () {\r\n\t        if (this.headerFont) {\r\n\t            return this.headerFont;\r\n\t        }\r\n\t        var header = document.querySelector('.ui-grid-header-cell .ui-grid-cell-contents');\r\n\t        if (!header) {\r\n\t            throw new Error('not found: .ui-grid-header-cell .ui-grid-cell-contents');\r\n\t        }\r\n\t        var headerStyle = getComputedStyle(header);\r\n\t        this.headerFont = UiGridMetrics.getFontStringFrom(headerStyle);\r\n\t        return this.headerFont;\r\n\t    };\r\n\t    UiGridMetrics.prototype.getCellFont = function () {\r\n\t        if (this.cellFont) {\r\n\t            return this.cellFont;\r\n\t        }\r\n\t        var cell = document.querySelector('.ui-grid-cell > .ui-grid-cell-contents');\r\n\t        if (!cell) {\r\n\t            var element = document.createElement('div');\r\n\t            element.className = 'ui-grid-cell-contents';\r\n\t            element.style.cssFloat = 'left';\r\n\t            angular.element(document.body).append(element);\r\n\t            var cellStyle_1 = getComputedStyle(element);\r\n\t            this.cellFont = UiGridMetrics.getFontStringFrom(cellStyle_1);\r\n\t            angular.element(element).remove();\r\n\t            return this.cellFont;\r\n\t        }\r\n\t        var cellStyle = getComputedStyle(cell);\r\n\t        this.cellFont = UiGridMetrics.getFontStringFrom(cellStyle);\r\n\t        return this.cellFont;\r\n\t    };\r\n\t    UiGridMetrics.prototype.getPadding = function () {\r\n\t        if (this.padding) {\r\n\t            return this.padding;\r\n\t        }\r\n\t        var header = document.querySelector('.ui-grid-header-cell .ui-grid-cell-contents');\r\n\t        if (!header) {\r\n\t            throw new Error('not found: .ui-grid-header-cell .ui-grid-cell-contents');\r\n\t        }\r\n\t        var _a = getComputedStyle(header), paddingLeft = _a.paddingLeft, paddingRight = _a.paddingRight;\r\n\t        this.padding = parseInt(paddingLeft) + parseInt(paddingRight);\r\n\t        return this.padding;\r\n\t    };\r\n\t    UiGridMetrics.prototype.getBorder = function () {\r\n\t        if (this.border) {\r\n\t            return this.border;\r\n\t        }\r\n\t        var header = document.querySelector('.ui-grid-header-cell');\r\n\t        if (!header) {\r\n\t            throw new Error('not found: .ui-grid-header-cell');\r\n\t        }\r\n\t        var borderRightWidth = getComputedStyle(header).borderRightWidth;\r\n\t        this.border = parseInt(borderRightWidth);\r\n\t        return this.border;\r\n\t    };\r\n\t    UiGridMetrics.prototype.getHeaderButtonsWidth = function () {\r\n\t        // TODO: lets be more precise\r\n\t        var HEADER_BUTTONS_WIDTH = 25;\r\n\t        return HEADER_BUTTONS_WIDTH;\r\n\t    };\r\n\t    UiGridMetrics.getFontStringFrom = function (_a) {\r\n\t        var fontStyle = _a.fontStyle, fontVariant = _a.fontVariant, fontWeight = _a.fontWeight, fontSize = _a.fontSize, fontFamily = _a.fontFamily;\r\n\t        // in FF cssStyle.font may be '' so we need to collect it manually\r\n\t        // font: [font-style||font-variant||font-weight] font-size [/line-height] font-family | inherit\r\n\t        return fontStyle + \" \" + fontVariant + \" \" + fontWeight + \" \" + fontSize + \" \" + fontFamily;\r\n\t    };\r\n\t    return UiGridMetrics;\r\n\t}());\r\n\texports.UiGridMetrics = UiGridMetrics;\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = UiGridMetrics;\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/*@ngInject*/\n\tUiGridAutoFitColumnsDirective.$inject = [\"uiGridAutoFitColumnsService\"];\r\n\tfunction UiGridAutoFitColumnsDirective(uiGridAutoFitColumnsService) {\r\n\t    return {\r\n\t        replace: true,\r\n\t        priority: 0,\r\n\t        require: '^uiGrid',\r\n\t        scope: false,\r\n\t        compile: function () {\r\n\t            return {\r\n\t                pre: function ($scope, $elm, $attrs, uiGridCtrl) {\r\n\t                    uiGridAutoFitColumnsService.initializeGrid(uiGridCtrl.grid);\r\n\t                }\r\n\t            };\r\n\t        }\r\n\t    };\r\n\t}\r\n\texports.UiGridAutoFitColumnsDirective = UiGridAutoFitColumnsDirective;\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// autoFitColumns.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2a30a220c7a745a6233b","import * as angular from 'angular';\nimport { UiGridAutoFitColumnsService } from './UiGridAutoFitColumnsService';\nimport { UiGridAutoFitColumnsDirective } from './UiGridAutoFitColumnsDirective';\n\nexport default angular.module('ui.grid.autoFitColumns', ['ui.grid'])\n    .service('uiGridAutoFitColumnsService', UiGridAutoFitColumnsService)\n    .directive('uiGridAutoFitColumns', UiGridAutoFitColumnsDirective)\n    .name;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 1\n// module chunks = 0","import * as get from 'lodash/object/get';\nimport Measurer from './Measurer';\nimport UiGridMetrics from './UiGridMetrics';\n\ninterface IExtendedColumnDef extends uiGrid.IColumnDef {\n    enableColumnAutoFit: boolean;\n}\n\ninterface IExtendedGridColumn extends uiGrid.IGridColumn {\n    colDef: IExtendedColumnDef;\n}\n\ninterface IExtendedGridInstance extends uiGrid.IGridInstance {\n    options: IExtendedGridOptions;\n}\n\ninterface IExtendedGridOptions extends uiGrid.IGridOptions {\n    enableColumnAutoFit: boolean;\n}\n\ninterface IAnyFilterPredicateFunc {\n    (value: any, firstFlag?: any, secondFlag?: any): string;\n}\n\nexport class UiGridAutoFitColumnsService {\n    private gridMetrics: UiGridMetrics;\n\n    /*@ngInject*/\n    constructor (private $q: angular.IQService, private $filter: angular.IFilterService) {\n        this.gridMetrics = new UiGridMetrics();\n    }\n\n    initializeGrid(grid: IExtendedGridInstance) {\n        grid.registerColumnBuilder(this.colAutoFitColumnBuilder.bind(this));\n        grid.registerColumnsProcessor(this.columnsProcessor.bind(this), 60);\n\n        UiGridAutoFitColumnsService.defaultGridOptions(grid.options);\n    }\n\n    static defaultGridOptions(gridOptions: IExtendedGridOptions) {\n        // true by default\n        gridOptions.enableColumnAutoFit = gridOptions.enableColumnAutoFit !== false;\n    }\n\n    private getFilterIfExists<T>(filterName): any {\n        try {\n            return this.$filter<IAnyFilterPredicateFunc>(filterName);\n        } catch (e) {\n            return null;\n        }\n    }\n\n    private getFilteredValue(value: string, cellFilter: string) {\n        if (cellFilter && cellFilter !== '') {\n            const filter = this.getFilterIfExists(cellFilter);\n            if (filter) {\n                value = filter(value);\n            } else {\n                // https://regex101.com/r/rC5eR5/2\n                const re = /([^:]*):([^:]*):?([\\s\\S]+)?/;\n                let matches;\n                if ((matches = re.exec(cellFilter)) !== null) {\n                    value = this.$filter<IAnyFilterPredicateFunc>(matches[1])(value, matches[2], matches[3]);\n                }\n            }\n        }\n        return value;\n    }\n\n    colAutoFitColumnBuilder(colDef: IExtendedColumnDef, col: IExtendedGridColumn, gridOptions: IExtendedGridOptions) {\n        const promises = [];\n\n        if (colDef.enableColumnAutoFit === undefined) {\n            //TODO: make it as col.isResizable()\n            if (UiGridAutoFitColumnsService.isResizable(colDef)) {\n                colDef.enableColumnAutoFit = gridOptions.enableColumnAutoFit;\n            } else {\n                colDef.enableColumnAutoFit = false;\n            }\n        }\n\n        return this.$q.all(promises);\n    }\n\n    static isResizable(colDef: IExtendedColumnDef): boolean {\n        return !colDef.hasOwnProperty('width');\n    }\n\n    columnsProcessor(renderedColumnsToProcess?: Array<IExtendedGridColumn>, rows?: Array<uiGrid.IGridRow>) {\n        if (!rows.length) {\n            return renderedColumnsToProcess;\n        }\n        // TODO: respect existing colDef options\n        // if (col.colDef.enableColumnAutoFitting === false) return;\n\n        let optimalWidths: {\n            [name: string]: number\n        } = {};\n\n\n        renderedColumnsToProcess.forEach(column => {\n\n            if (column.colDef.enableColumnAutoFit) {\n                const columnKey = column.field || column.name;\n                optimalWidths[columnKey] = Measurer.measureRoundedTextWidth(column.displayName, this.gridMetrics.getHeaderFont()) + this.gridMetrics.getHeaderButtonsWidth();\n\n                rows.forEach((row) => {\n                    let cellText = get(row.entity, columnKey);\n\n                    if (!!column.colDef.cellFilter) {\n                        cellText = this.getFilteredValue(cellText, column.colDef.cellFilter);\n                    }\n\n                    const currentCellWidth = Measurer.measureRoundedTextWidth(cellText, this.gridMetrics.getCellFont());\n                    const optimalCellWidth = currentCellWidth > 300 ? 300 : currentCellWidth;\n\n                    if (optimalCellWidth > optimalWidths[columnKey]) {\n                        optimalWidths[columnKey] = optimalCellWidth;\n                    }\n                });\n\n                column.colDef.width = optimalWidths[columnKey] + this.gridMetrics.getPadding() + this.gridMetrics.getBorder();\n                column.updateColumnDef(column.colDef, false);\n            }\n        });\n        return renderedColumnsToProcess;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/UiGridAutoFitColumnsService.ts","var baseGet = require('../internal/baseGet'),\n    toPath = require('../internal/toPath');\n\n/**\n * Gets the property value at `path` of `object`. If the resolved value is\n * `undefined` the `defaultValue` is used in its place.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, toPath(path), (path + ''));\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/object/get.js\n// module id = 3\n// module chunks = 0","var toObject = require('./toObject');\n\n/**\n * The base implementation of `get` without support for string paths\n * and default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path of the property to get.\n * @param {string} [pathKey] The key representation of path.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path, pathKey) {\n  if (object == null) {\n    return;\n  }\n  if (pathKey !== undefined && pathKey in toObject(object)) {\n    path = [pathKey];\n  }\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/internal/baseGet.js\n// module id = 4\n// module chunks = 0","var isObject = require('../lang/isObject');\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/internal/toObject.js\n// module id = 5\n// module chunks = 0","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lang/isObject.js\n// module id = 6\n// module chunks = 0","var baseToString = require('./baseToString'),\n    isArray = require('../lang/isArray');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `value` to property path array if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  var result = [];\n  baseToString(value).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\nmodule.exports = toPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/internal/toPath.js\n// module id = 7\n// module chunks = 0","/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  return value == null ? '' : (value + '');\n}\n\nmodule.exports = baseToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/internal/baseToString.js\n// module id = 8\n// module chunks = 0","var getNative = require('../internal/getNative'),\n    isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lang/isArray.js\n// module id = 9\n// module chunks = 0","var isNative = require('../lang/isNative');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/internal/getNative.js\n// module id = 10\n// module chunks = 0","var isFunction = require('./isFunction'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lang/isNative.js\n// module id = 11\n// module chunks = 0","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 which returns 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\nmodule.exports = isFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lang/isFunction.js\n// module id = 12\n// module chunks = 0","/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/internal/isObjectLike.js\n// module id = 13\n// module chunks = 0","/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/internal/isLength.js\n// module id = 14\n// module chunks = 0","export class Measurer {\n    private static canvas: HTMLCanvasElement;\n\n    static measureTextWidth(text: string, font: string): number{\n        const canvas = Measurer.canvas || (Measurer.canvas = document.createElement('canvas'));\n        const context = canvas.getContext('2d');\n        context.font = font;\n        const metrics = context.measureText(text);\n        return metrics.width;\n    }\n\n    static measureRoundedTextWidth(text: string, font: string): number{\n        const width = Measurer.measureTextWidth(text, font);\n        return Math.floor(width) + 1;\n    }\n}\n\nexport default Measurer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Measurer.ts","export class UiGridMetrics {\n    private headerFont: string;\n    private cellFont: string;\n    private padding: number;\n    private border: number;\n\n    getHeaderFont(){\n        if(this.headerFont){\n            return this.headerFont;\n        }\n\n        let header = document.querySelector('.ui-grid-header-cell .ui-grid-cell-contents');\n\n        if(!header) {\n            throw new Error('not found: .ui-grid-header-cell .ui-grid-cell-contents');\n        }\n\n        let headerStyle = getComputedStyle(header);\n        this.headerFont = UiGridMetrics.getFontStringFrom(headerStyle);\n        return this.headerFont;\n    }\n\n    getCellFont(){\n        if(this.cellFont){\n            return this.cellFont;\n        }\n\n        let cell = document.querySelector('.ui-grid-cell > .ui-grid-cell-contents');\n\n        if(!cell){\n            let element = document.createElement('div');\n            element.className = 'ui-grid-cell-contents';\n            element.style.cssFloat = 'left';\n            angular.element(document.body).append(element);\n            let cellStyle = getComputedStyle(element);\n            this.cellFont = UiGridMetrics.getFontStringFrom(cellStyle);\n            angular.element(element).remove();\n            return this.cellFont;\n        }\n\n        let cellStyle = getComputedStyle(cell);\n        this.cellFont = UiGridMetrics.getFontStringFrom(cellStyle);\n        return this.cellFont;\n    }\n\n    getPadding(){\n        if(this.padding){\n            return this.padding;\n        }\n\n        let header = document.querySelector('.ui-grid-header-cell .ui-grid-cell-contents');\n\n        if(!header) {\n            throw new Error('not found: .ui-grid-header-cell .ui-grid-cell-contents');\n        }\n\n        let {paddingLeft, paddingRight} = getComputedStyle(header);\n        this.padding = parseInt(paddingLeft) + parseInt(paddingRight);\n        return this.padding;\n    }\n\n    getBorder(){\n        if(this.border){\n            return this.border;\n        }\n\n        let header = document.querySelector('.ui-grid-header-cell');\n\n        if(!header) {\n            throw new Error('not found: .ui-grid-header-cell');\n        }\n\n        let {borderRightWidth} = getComputedStyle(header);\n        this.border = parseInt(borderRightWidth);\n        return this.border;\n    }\n\n    getHeaderButtonsWidth(){\n        // TODO: lets be more precise\n        const HEADER_BUTTONS_WIDTH = 25;\n        return HEADER_BUTTONS_WIDTH;\n    }\n\n    private static getFontStringFrom({fontStyle, fontVariant, fontWeight, fontSize, fontFamily}: CSSStyleDeclaration): string {\n        // in FF cssStyle.font may be '' so we need to collect it manually\n        // font: [font-style||font-variant||font-weight] font-size [/line-height] font-family | inherit\n        return `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize} ${fontFamily}`;\n    }\n\n}\n\nexport default UiGridMetrics;\n\n\n\n// WEBPACK FOOTER //\n// ./src/UiGridMetrics.ts","import { UiGridAutoFitColumnsService } from './UiGridAutoFitColumnsService';\n\n/*@ngInject*/\nexport function UiGridAutoFitColumnsDirective (uiGridAutoFitColumnsService: UiGridAutoFitColumnsService) {\n    return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        compile: function () {\n            return {\n                pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n                    uiGridAutoFitColumnsService.initializeGrid(uiGridCtrl.grid);\n                }\n            };\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/UiGridAutoFitColumnsDirective.ts"],"sourceRoot":""}